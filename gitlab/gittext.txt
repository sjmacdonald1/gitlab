
        <h2>Overview of Git</h2>
        <p><img src="images/gitlogo.png" width="406" height="406" alt="Two nodes coming off a   
        main branch" title="Git Logo" class="right">So, what is Git in a nutshell? This is an
        important section to absorb, because if you understand what Git is and the fundamentals  
        of how it works, then using Git effectively will probably be much easier for you. As you
        learn Git, try to clear your mind of the things you may know about other VCSs, such as 
        CVS, Subversion or Perforce — doing so will help you avoid subtle confusion when using 
        the tool. Even though Git's user interface is fairly similar to these other VCSs, Git 
        stores and thinks about information in a very different way, and understanding these 
        differences will help you avoid becoming confused while using it.</p>
        <h3>Snapshots, Not Differences</h3>
        <p>The major difference between Git and any other VCS (Subversion and friends included) 
        is the way Git thinks about its data. Conceptually, most other systems store information 
        as a list of file-based changes. These other systems (CVS, Subversion, Perforce, and so 
        on) think of the information they store as a set of files and the changes made to each 
        file over time (this is commonly described as delta-based version control).</p>
